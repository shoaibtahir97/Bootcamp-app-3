{"version":3,"sources":["Navbar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","classes","className","AppBar","Toolbar","Typography","variant","noWrap","to","App","path","element","Home","Launch","LaunchIndex","LaunchShoe","NotFound","Object","entries","shoes","map","slug","name","img","key","src","alt","useParams","shoe","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6UAaMA,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAI/BC,MAAM,aACFJ,SAAU,EACVK,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,UAGjBG,OAAO,aACHC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACPJ,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,MAEtDC,WAAY,EACZC,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BU,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGfC,WAAY,CACRC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAEpBC,UAAW,CACPC,MAAO,WAEXC,WAAW,aACPP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC1BW,MAAO,OACP,UAAW,CACPA,MAAO,eAMR,SAASc,IACpB,IAAMC,EAAUrC,IAEhB,OACI,yBAAKsC,UAAWD,EAAQlC,MACpB,kBAACoC,EAAA,EAAD,CAAQ1B,SAAS,UACb,kBAAC2B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYH,UAAWD,EAAQ7B,MAAOkC,QAAQ,KAAKC,QAAM,GACrD,6BACI,kBAAC,IAAD,CAAML,UAAU,OAAOM,GAAG,KAA1B,QAGA,kBAAC,IAAD,CAAMN,UAAU,SAASM,GAAG,WAA5B,e,MCrEb,SAASC,IACtB,OACE,kBAAC,IAAD,KACA,kBAAC,EAAD,MAGE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,kBAACC,EAAD,QACzB,kBAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,kBAACE,EAAD,OAC5B,kBAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,kBAACG,EAAD,QACzB,kBAAC,IAAD,CAAOJ,KAAK,QAAQC,QAAS,kBAACI,EAAD,SAE/B,kBAAC,IAAD,CAAOL,KAAK,IAAIC,QAAS,kBAACK,EAAD,UAMjC,SAASA,IACP,OACE,6BACE,yCACA,6DAKN,SAASJ,IACP,OACA,6BACE,0DACC,uDAML,SAASC,IACP,OACE,6BACE,sCACA,kBAAC,IAAD,OAKN,SAASC,IACP,OACE,yBAAKZ,UAAW,oBACbe,OAAOC,QAAQC,GAAOC,KAAI,mCAAEC,EAAF,YAAUC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,IAAhB,OACzB,wBAAIC,IAAKH,GACP,kBAAC,IAAD,CAAMnB,UAAU,OAAOM,GAAE,kBAAaa,IACpC,4BAAKC,GACL,yBAAKG,IAAKF,EAAKG,IAAKJ,EAAMjC,OAAQ,YAQ9C,SAAS0B,IAAa,IACZM,EAASM,cAATN,KACFO,EAAOT,EAAME,GAEnB,IAAIO,EACF,OAAM,yCALW,IAQZN,EAAaM,EAAbN,KAAMC,EAAOK,EAAPL,IAEb,OACA,6BACE,4BAAMD,GACN,yBAAKjC,OAAQ,IAAKoC,IAAKF,EAAKG,IAAKJ,KAKnC,IAAMH,EAAQ,CACZ,0BAA2B,CACzBG,KAAM,cACNC,IACE,+FAEJ,yBAA0B,CACxBD,KAAM,yBACNC,IACE,+FAEJ,+BAAgC,CAC9BD,KAAM,aACNC,IACE,gGC9FYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.be76e12d.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport './Navbar.css';\n\nimport {\n    BrowserRouter as Router,\n    Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n   \n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function Navbar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h4\" noWrap>\n                        <nav>\n                            <Link className=\"home\" to=\"/\">\n                                Home\n                            </Link>\n                            <Link className=\"launch\" to=\"/launch\">\n                                Launch\n                            </Link>\n                        </nav>\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { \n  BrowserRouter as Router,\n   Routes,\n    Route,\n    Link,\n    Outlet,\n    useParams\n} from \"react-router-dom\";\nimport Navbar from './Navbar';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Router>\n    <Navbar/>\n      \n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"launch\" element={<Launch />}>\n          <Route path=\"/\" element={<LaunchIndex />} />\n          <Route path=\":slug\" element={<LaunchShoe />} />\n        </Route>\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Router>\n  );\n}\n\nfunction NotFound(){\n  return(\n    <div>\n      <h1>Not Found</h1>\n      <p>Sorry your page was not Found</p>\n    </div>\n  );\n}\n\nfunction Home(){\n  return(\n  <div>\n    <h1>Welcome to Nike Shoe Store!\n     <h4>Made by Shoaib Tahir </h4>\n    </h1>\n  </div>\n  );\n}\n\nfunction Launch(){\n  return(\n    <div>\n      <h1>Launch</h1>\n      <Outlet />\n    </div>\n  );\n}\n  \nfunction LaunchIndex() {\n  return (\n    <div className= \"productContainer\">\n      {Object.entries(shoes).map(([slug, { name, img }]) => (\n        <ul key={slug}>\n          <Link className=\"link\" to={`/launch/${slug}`}>\n            <h2>{name}</h2>\n            <img src={img} alt={name} height={150} />\n          </Link>\n        </ul>\n      ))}\n    </div>\n  );\n}\n\nfunction LaunchShoe(){\n  const { slug } = useParams();\n  const shoe = shoes[slug];\n  \n  if(!shoe){\n    return<h2>Not Found</h2>\n  }\n\n  const {name, img} = shoe;\n\n  return(\n  <div>\n    <h2>{ name }</h2>\n    <img height={700} src={img} alt={name}/>\n  </div>\n  );\n}\n\n  const shoes = {\n    \"air-jordan-3-valor-blue\": {\n      name: \"VALOUR BLUE\",\n      img:\n        \"https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&align=0,1\"\n    },\n    \"jordan-mars-270-london\": {\n      name: \"JORDAN MARS 270 LONDON\",\n      img:\n        \"https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&align=0,1\"\n    },\n    \"air-jordan-1-zoom-racer-blue\": {\n      name: \"RACER BLUE\",\n      img:\n        \"https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&align=0,1\"\n    }\n  };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}